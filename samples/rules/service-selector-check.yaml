apiVersion: kubevious.io/v1alpha1
kind: ClusterRule
metadata:
  name: service-selector-check
spec:
  target: |
    ApiVersion('v1')
    .Kind('Service')
  rule: |
    const apps = ApiVersion('apps/v1')
                  .Kind("Deployment")
                  .many();

    const myApps = [];
    for(const app of apps)
    {
        if (matchesDict(config.spec.selector ?? {}, app.config.spec.template.metadata.labels ?? {}))
        {
            myApps.push(app);
        }
    }
    if (myApps.length === 0) {
        error("Could not find Applications for Service");
    }

    function matchesDict(selector, labels)
    {
        for(const key of Object.keys(selector))
        {
            if (selector[key] !== labels[key])
            {
                return false;
            }
        }
        return true;
    }